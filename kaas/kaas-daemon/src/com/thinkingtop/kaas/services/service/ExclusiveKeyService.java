
package com.thinkingtop.kaas.services.service;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.1.6 in JDK 6
 * Generated source version: 2.1
 * 
 */
@WebService(name = "ExclusiveKeyService", targetNamespace = "http://service.services.kaas.thinkingtop.com/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface ExclusiveKeyService {


    /**
     * 
     * @param ecommerceName
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "GetAPIKey")
    @WebResult(name = "result", targetNamespace = "")
    @RequestWrapper(localName = "GetAPIKey", targetNamespace = "http://service.services.kaas.thinkingtop.com/", className = "com.thinkingtop.kaas.services.service.GetAPIKey")
    @ResponseWrapper(localName = "GetAPIKeyResponse", targetNamespace = "http://service.services.kaas.thinkingtop.com/", className = "com.thinkingtop.kaas.services.service.GetAPIKeyResponse")
    public String getAPIKey(
        @WebParam(name = "ecommerceName", targetNamespace = "")
        String ecommerceName);

    /**
     * 
     * @param keyString
     * @param ecommerceName
     * @param inputItems
     * @param outputItemsNum
     * @param outputQuantitye
     * @param algorithm
     * @return
     *     returns java.util.List<java.lang.String>
     */
    @WebMethod(operationName = "GetRecommends")
    @WebResult(name = "result", targetNamespace = "")
    @RequestWrapper(localName = "GetRecommends", targetNamespace = "http://service.services.kaas.thinkingtop.com/", className = "com.thinkingtop.kaas.services.service.GetRecommends")
    @ResponseWrapper(localName = "GetRecommendsResponse", targetNamespace = "http://service.services.kaas.thinkingtop.com/", className = "com.thinkingtop.kaas.services.service.GetRecommendsResponse")
    public List<String> getRecommends(
        @WebParam(name = "ecommerceName", targetNamespace = "")
        String ecommerceName,
        @WebParam(name = "KeyString", targetNamespace = "")
        String keyString,
        @WebParam(name = "algorithm", targetNamespace = "")
        String algorithm,
        @WebParam(name = "inputItems", targetNamespace = "")
        String inputItems,
        @WebParam(name = "outputItemsNum", targetNamespace = "")
        int outputItemsNum,
        @WebParam(name = "outputQuantitye", targetNamespace = "")
        int outputQuantitye);

    /**
     * 
     * @param keyString
     * @param ecommerceName
     * @return
     *     returns java.util.List<java.lang.String>
     */
    @WebMethod(operationName = "GetAPIKeyState")
    @WebResult(name = "result", targetNamespace = "")
    @RequestWrapper(localName = "GetAPIKeyState", targetNamespace = "http://service.services.kaas.thinkingtop.com/", className = "com.thinkingtop.kaas.services.service.GetAPIKeyState")
    @ResponseWrapper(localName = "GetAPIKeyStateResponse", targetNamespace = "http://service.services.kaas.thinkingtop.com/", className = "com.thinkingtop.kaas.services.service.GetAPIKeyStateResponse")
    public List<String> getAPIKeyState(
        @WebParam(name = "ecommerceName", targetNamespace = "")
        String ecommerceName,
        @WebParam(name = "KeyString", targetNamespace = "")
        String keyString);

}
